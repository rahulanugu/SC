name: Build and Test application (Scriptchain)

on:
  push:
    branches:
      - master
  pull_request:
    types: [ closed ]
    branches: [ master ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js v16.0.0
      uses: actions/setup-node@v2
      with:
        node-version: 16.0.0

    - name: clear npm cache
      working-directory: ./web-application/angular
      run: npm cache clean -f

    - name: install latest npm version
      working-directory: ./web-application/angular
      run: npm install -g npm@latest

    - name: install all packages
      working-directory: ./web-application/angular
      run: npm install -g

    - name: install ansi-colors
      working-directory: ./web-application/angular
      run: npm install -g ansi-colors

    - name: install angular cli
      working-directory: ./web-application/angular
      run: npm install -g @angular/cli@8.3.29

    - name: link npm with angular cli
      working-directory: ./web-application/angular
      run: npm link @angular/cli

    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: 'AKIA5VJT4NZ5L67V7OB2'
        aws-secret-access-key: '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'
        aws-region: 'us-east-2'

    - name: build in production mode
      working-directory: ./web-application/angular
      run: npm run build
    
    - name: store build result in the dist directory
      uses: actions/upload-artifact@v2
      with:
        name: buildOutput
        path: ./web-application/node/dist
    
    - name: download archive
      uses: actions/download-artifact@v2
      with:
        name: buildOutput
        path: ./web-application/node/dist

    - name: install all backend packages
      working-directory: ./web-application/node
      run: npm install

    - name: Test backend
      working-directory: ./web-application/node
      run: npm test
    
  continuous-deployment:

    needs: continuous-integration

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'
    steps:

    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: 'AKIA5VJT4NZ5L67V7OB2'
        aws-secret-access-key: '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'
        aws-region: us-east-2

    - name: copy artifact to S3
      run: |
        aws s3 cp \
        --recursive \
        --region us-east-2 \
        ./web-application/node/dist s3://scriptchain-deploy-bucket

    - name: Deploy github repo through CodeDeploy Deployment
      run: |
        aws deploy create-deployment \
        --application-name ScriptChain \
        --deployment-group-name CodeDeployGitHubDemo-DepGrp \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --github-location repository=${{ github.repository }},commitId=${{ github.sha }}  \
      
    - name: Deploy s3 bucket
      id: deploy
      run: |
        aws deploy create-deployment \
        --application-name ScriptChain \
        --deployment-group-name CodeDeployGitHubDemo-DepGrp \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --s3-location bundleType=zip,bucket=scriptchain-deploy-bucket,key=buildOutput.zip

        
  # testUI:

  #   needs: build

  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: install latest npm version
  #     working-directory: ./web-application/angular
  #     run: npm install -g npm@latest

  #   - name: Install packages
  #     working-directory: ./web-application/angular
  #     run: npm install -g

  #   - name: test UI
  #     working-directory: ./web-application/angular
  #     run: npm run test

  # testBackend:

  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js v16.0.0
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 16.0.0

  #   - name: install latest npm version
  #     working-directory: ./web-application/node
  #     run: npm install npm@latest

  #   - name: install all backend packages
  #     working-directory: ./web-application/node
  #     run: npm install

  #   - name: Test backend
  #     working-directory: ./web-application/node
  #     run: npm test

  # triggerApp:

  #   needs: [build, testBackend]

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Trigger app
  #     run: 
# Authors and their contributions:
# Vidit: Wrote the whole file.

name: Build and Test DEV application (Scriptchain)

on:
  push:
    branches:
      - dev
  pull_request:
    types: [closed]
    branches: [dev]

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      # install all dependencies

      - uses: actions/checkout@v2

      - name: Use Node.js v16.0.0
        uses: actions/setup-node@v2
        with:
          node-version: 16.0.0

      - name: clear npm cache
        working-directory: ./web-application/angular
        run: npm cache clean -f

      - name: install latest npm version
        working-directory: ./web-application/angular
        run: npm install -g npm@latest

      - name: install all packages
        working-directory: ./web-application/angular
        run: npm install -g

      - name: install ansi-colors
        working-directory: ./web-application/angular
        run: npm install -g ansi-colors

      - name: install angular cli
        working-directory: ./web-application/angular
        run: npm install -g @angular/cli@8.3.29

      # --------- install all dependencies -----------------

      # configurations

      - name: link npm with angular cli
        working-directory: ./web-application/angular
        run: npm link @angular/cli

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-2"

      # ----------- configurations ---------------------

      # build and store output

      - name: build in production mode
        working-directory: ./web-application/angular
        run: npm run build

      - name: store build result in the dist directory
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./web-application/node/dist

      # ------------- build and store output ---------------

      # backend testing

      # Temporarily commenting out tests so that deployment works

      # - name: install all backend packages
      #   working-directory: ./web-application/node
      #   run: npm install

      # - name: Test backend
      #   working-directory: ./web-application/node
      #   run: npm test

      # ----------- backend testing ------------------------

      # pre-process and upload build output to AWS S3

      - name: zip artifact
        uses: papeloto/action-zip@v1
        with:
          files: web-application/node appspec.yml start_setup.sh
          recursive: true
          dest: scriptchain.zip

      - name: upload archive
        uses: actions/upload-artifact@v2
        with:
          name: scriptchain.zip
          path: ./scriptchain.zip

      - name: copy artifact to S3
        run: |
          aws s3 cp \
          --region us-east-2 \
          scriptchain1.zip s3://scriptchain-dev-deploy-bucket

      # ------------ pre-process and upload build output to AWS S3 ---------------------

      # deploy AWS S3 bucket contents

      - name: Deploy s3 bucket
        id: deploy
        run: |
          aws deploy create-deployment \
          --application-name Scriptchain-DEV \
          --deployment-group-name CodeDeployGitHubDemo-DepGrp \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --s3-location bundleType=zip,bucket=scriptchain-dev-deploy-bucket,key=scriptchain.zip
      # --------------- deploy AWS S3 bucket contents ---------------------
      # delete the artifacts from the workflow run

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            dist
            scriptchain.zip
    # ------------ delete the artifacts from the workflow run ---------------
